
;-------------------------------------------------------------------------------
; Windows Platform
;-------------------------------------------------------------------------------
;.VSBasePath			= '../External/SDK/VS13.4'
;.WindowsSDKBasePath	= '../External/SDK/Windows8.1'
;.ClangBasePath		= '../External/SDK/ClangForWindows/3.6'

.VSBasePath			= 'C:/Program Files (x86)/Microsoft Visual Studio 14.0'
.WindowsSDKBasePath	= 'C:/Program Files (x86)/Microsoft SDKs\Windows/v7.1A'
.WindowsUniversalCRTPath = 'C:/Program Files (x86)/Windows Kits/10'
.ClangBasePath		= 'C:/Program Files/LLVM'

;-------------------------------------------------------------------------------
; Settings
;-------------------------------------------------------------------------------
Settings
{
    #if __WINDOWS__
        .Environment	= { "PATH=$VSBasePath$\Common7\IDE\;$VSBasePath$\VC\bin\",
                            "TMP=C:\Windows\Temp",
                            "SystemRoot=C:\Windows" }
        .CachePath		= "R:\.fbuild.cache"
    #endif
    #if __OSX__
        .CachePath		= "/tmp/.fbuild.cache"
    #endif
    #if __LINUX__
        .CachePath		= "/tmp/.fbuild.cache"
    #endif
}

//------------------------------------------------------------------------------
// Compilers
//------------------------------------------------------------------------------
Compiler( 'Compiler-x86' )
{
	.Root		= '$VSBasePath$\VC\bin'
	.Executable	= '$Root$\cl.exe'
	.ExtraFiles = { '$Root$\c1.dll'
					;'$Root$\c1ast.dll',
					'$Root$\c1xx.dll',
					;'$Root$\c1xxast.dll',
					'$Root$\c2.dll',
					'$Root$\msobj140.dll'
					'$Root$\mspdb140.dll'
					'$Root$\mspdbsrv.exe'
					'$Root$\mspdbcore.dll'
					'$Root$\mspft140.dll'
					'$Root$\1033\clui.dll'
					'$VSBasePath$\VC\redist\x86\Microsoft.VC140.CRT\msvcp140.dll'
					'$VSBasePath$\VC\redist\x86\Microsoft.VC140.CRT\vcruntime140.dll'
					'$VSBasePath$\VC\redist\x86\Microsoft.VC140.CRT\vccorlib140.dll'
				  }
}
Compiler( 'Compiler-x64' )
{
	.Root		= '$VSBasePath$\VC\bin'
	.Executable	= '$Root$\x86_amd64\cl.exe'
	.fast = { 
					'$Root$\x86_amd64\c1.dll'
					;'$Root$\x86_amd64\c1ast.dll',
					'$Root$\x86_amd64\c1xx.dll',
					;'$Root$\x86_amd64\c1xxast.dll',
					'$Root$\x86_amd64\c2.dll',
					'$Root$\x86_amd64\1033\clui.dll'
					'$Root$\msobj140.dll'
					'$Root$\mspdb140.dll'
					'$Root$\mspdbsrv.exe'
					'$Root$\mspdbcore.dll'
					'$Root$\mspft140.dll'
					'$VSBasePath$\VC\redist\x86\Microsoft.VC140.CRT\msvcp140.dll'
					'$VSBasePath$\VC\redist\x86\Microsoft.VC140.CRT\vcruntime140.dll'
					'$VSBasePath$\VC\redist\x86\Microsoft.VC140.CRT\vccorlib140.dll'
				  }
}
Compiler( 'Compiler-x86Clang' )
{
	.Root		= '$ClangBasePath$'
	.Executable	= '$Root$\bin\clang++.exe'
}
Compiler( 'Compiler-x64-Linux' )
{
    .Executable = '/usr/bin/gcc'
}
Compiler( 'Compiler-x64-OSX' )
{
.Executable = '/usr/bin/g++'
}

;todo add other "boilerplate things"
; let project file use these boilerplate things (debug vs release?)

.MSVCBaseConfig =
[
	.CompilerOptions 		= '"%1" /EHsc /nologo /c /FS /FAsc /RTCc /WX- /RTCc /MP /GS /TC /Qpar /analyze- /W4 /Gy /Zc:wchar_t /Zc:forScope /RTC1 /Gd /Oy- /D_CRT_SECURE_NO_WARNINGS' ; /FS Forces writes to the program database (PDB) file to be serialized through MSPDBSRV.EXE.
	.PCHOptions				= .CompilerOptions
							+ ' /Fp"%2" /Fo"%3"'
	.CompilerOptions		+ ' /Fo"%2"'
	.LibrarianOptions		= '/NOLOGO /OUT:"%2" "%1"'

	; TODO richardk: get this libraries right
	.LinkerOptions			= '/NOLOGO /INCREMENTAL:NO /OUT:"%2" "%1" /DEBUG "ole32.lib" "kernel32.lib" "user32.lib" "gdi32.lib" "winspool.lib" "comdlg32.lib" "advapi32.lib" "shell32.lib" "oleaut32.lib" "uuid.lib" "odbc32.lib" "odbccp32.lib" ' 

	.LibrarianDebugOptimizations	= ''
	.LibrarianReleaseOptimizations  = ' /LTCG'
	.LinkerDebugOptimizations		= '' + ' "libcmtd.lib" "libvcruntimed.lib" "libucrtd.lib"'
	.LinkerReleaseOptimizations		= ' /LTCG /OPT:REF,ICF' + ' "libcmt.lib" "libvcruntime.lib" "libucrt.lib"'	

	.BaseIncludePaths		= ' /I"./" /I"c:\Program Files (x86)\Windows Kits\10\Include\10.0.10240.0\ucrt\" /I"C:/Program Files (x86)/Microsoft Visual Studio 14.0\VC\include\" /I"c:\Program Files (x86)\Windows Kits\8.1\Include\um\" /I"c:\Program Files (x86)\Windows Kits\8.1\Include\shared\"' 


	.CompilerOptions		+ .BaseIncludePaths
	.PCHOptions				+ .BaseIncludePaths

	.WindowsLibPaths		= '$WindowsUniversalCRTPath$/Lib'

	;.UseExceptions			= ' /EHsc'
]
// X86
//------------------------------------------------------------------------------
.X86BaseConfig = 
[
	Using( .MSVCBaseConfig )
	.ToolsBasePath			= '$VSBasePath$\VC\bin'
	.Compiler				= 'Compiler-x86'
	.Librarian				= '$ToolsBasePath$\lib.exe'
	.Linker					= '$ToolsBasePath$\link.exe'
	.CompilerOptions		+ ' /arch:SSE2'
							+ ' /DWIN32'
	.PCHOptions				+ ' /arch:SSE2'
							+ ' /DWIN32'
	.LinkerOptions			+ ' /MACHINE:X86'
	.Platform				= 'x86'
	.LinkerOptions			+ ' /LIBPATH:"$WindowsLibPaths$/10.0.10586.0/um/x86/"' 
							+ ' /LIBPATH:"$WindowsLibPaths$/10.0.10586.0/ucrt/x86/"'
	 						+ ' /LIBPATH:"$VSBasePath$/VC/lib"'
]

.OutputBase	= 'tmp'
//------------------------------------------------------------------------------
// Unity/Blob files (shared across configs)
//------------------------------------------------------------------------------
.UnityInputIsolateWritableFiles = false

.UnityHelperFiles = { "unitybuildhelper.h"}
.UnityInputExcluders = { "src/host/lua-5.1.4/src/lundump.c" }
