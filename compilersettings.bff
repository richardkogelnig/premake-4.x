
;-------------------------------------------------------------------------------
; Windows Platform
;-------------------------------------------------------------------------------
;.VSBasePath			= '../External/SDK/VS13.4'
;.WindowsSDKBasePath	= '../External/SDK/Windows8.1'
;.ClangBasePath		= '../External/SDK/ClangForWindows/3.6'

.VSBasePath			= 'R:/Programs/Microsoft Visual Studio 14.0'
.WindowsSDKBasePath	= 'C:/Program Files (x86)/Microsoft SDKs\Windows/v7.1A'
.WindowsUniversalCRTPath = 'C:/Program Files (x86)/Windows Kits/10'
.ClangBasePath		= 'R:/Program Files/LLVM'

;-------------------------------------------------------------------------------
; Settings
;-------------------------------------------------------------------------------
Settings
{
    #if __WINDOWS__
        .Environment	= { "PATH=$VSBasePath$\Common7\IDE\;$VSBasePath$\VC\bin\",
                            "TMP=C:\Windows\Temp",
                            "SystemRoot=C:\Windows" }
        .CachePath		= "R:\.fbuild.cache"
    #endif
    #if __OSX__
        .CachePath		= "/tmp/.fbuild.cache"
    #endif
    #if __LINUX__
        .CachePath		= "/tmp/.fbuild.cache"
    #endif
}

//------------------------------------------------------------------------------
// Compilers
//------------------------------------------------------------------------------
Compiler( 'Compiler-x86' )
{
	.Root		= '$VSBasePath$\VC\bin'
	.Executable	= '$Root$\cl.exe'
	.ExtraFiles = { '$Root$\c1.dll'
					;'$Root$\c1ast.dll',
					'$Root$\c1xx.dll',
					;'$Root$\c1xxast.dll',
					'$Root$\c2.dll',
					'$Root$\msobj140.dll'
					'$Root$\mspdb140.dll'
					'$Root$\mspdbsrv.exe'
					'$Root$\mspdbcore.dll'
					'$Root$\mspft140.dll'
					'$Root$\1033\clui.dll'
					'$VSBasePath$\VC\redist\x86\Microsoft.VC140.CRT\msvcp140.dll'
					'$VSBasePath$\VC\redist\x86\Microsoft.VC140.CRT\vcruntime140.dll'
					'$VSBasePath$\VC\redist\x86\Microsoft.VC140.CRT\vccorlib140.dll'
				  }
}
Compiler( 'Compiler-x64' )
{
	.Root		= '$VSBasePath$\VC\bin'
	.Executable	= '$Root$\x86_amd64\cl.exe'
	.fast = { 
					'$Root$\x86_amd64\c1.dll'
					;'$Root$\x86_amd64\c1ast.dll',
					'$Root$\x86_amd64\c1xx.dll',
					;'$Root$\x86_amd64\c1xxast.dll',
					'$Root$\x86_amd64\c2.dll',
					'$Root$\x86_amd64\1033\clui.dll'
					'$Root$\msobj140.dll'
					'$Root$\mspdb140.dll'
					'$Root$\mspdbsrv.exe'
					'$Root$\mspdbcore.dll'
					'$Root$\mspft140.dll'
					'$VSBasePath$\VC\redist\x86\Microsoft.VC140.CRT\msvcp140.dll'
					'$VSBasePath$\VC\redist\x86\Microsoft.VC140.CRT\vcruntime140.dll'
					'$VSBasePath$\VC\redist\x86\Microsoft.VC140.CRT\vccorlib140.dll'
				  }
}
Compiler( 'Compiler-x86Clang' )
{
	.Root		= '$ClangBasePath$'
	.Executable	= '$Root$\bin\clang++.exe'
}
Compiler( 'Compiler-x64-Linux' )
{
    .Executable = '/usr/bin/gcc'
}
Compiler( 'Compiler-x64-OSX' )
{
.Executable = '/usr/bin/g++'
}

;todo add other "boilerplate things"
; let project file use these boilerplate things (debug vs release?)

.MSVCBaseConfig =
[
	.AdditionalWarnings		= ' /we4062' // enumerator 'identifier' in a switch of enum 'enumeration' is not handled
							+ ' /we4263' // 'function' : member function does not override any base class virtual member function
							+ ' /we4265' // 'class': class has virtual functions, but destructor is not virtual
							+ ' /we4296' // 'operator': expression is always false
							+ ' /we4555' // expression has no effect; expected expression with side-effect
							+ ' /we4619' // #pragma warning : there is no warning number 'number'
							+ ' /we4640' // 'instance' : construction of local static object is not thread-safe
							+ ' /we4826' // Conversion from 'type1 ' to 'type_2' is sign-extended. This may cause unexpected runtime behavior.
							+ ' /we4836' // nonstandard extension used : 'type' : local types or unnamed types cannot be used as template arguments
							+ ' /we4905' // wide string literal cast to 'LPSTR'
							+ ' /we4906' // string literal cast to 'LPWSTR'
							+ ' /wd6001' // disable warning C6001: using uninitialized memory <variable>

	.CompilerOptions 		= '"%1" /Z7 /nologo /c /W4 /WX'
							+ ' /Zc:inline'			// Remove unreferenced COMDATs at compile time (VS2013.2+)
							+ ' /Zc:strictStrings'	// Require const only usage of string literals (VS2013+)
							+ .AdditionalWarnings
							+ ' /fp:fast'
							+ ' /D"WIN32_LEAN_AND_MEAN" /D_WIN32 /D__WINDOWS__'
							+ ' /D"_CRT_SECURE_NO_WARNINGS"' // don't warn about unsafe functions
                            + ' /D"_WINSOCK_DEPRECATED_NO_WARNINGS"' // don't warn about deprecated winsock functions - TODO:C Update API use
	.PCHOptions				= .CompilerOptions
							+ ' /Fp"%2" /Fo"%3"'
	.CompilerOptions		+ ' /Fo"%2"'
	.LibrarianOptions		= '/NODEFAULTLIB /WX /NOLOGO /OUT:"%2" "%1"'
	.LinkerOptions			= '/NODEFAULTLIB /WX /NOLOGO /INCREMENTAL:NO /OUT:"%2" "%1" /DEBUG'

	// Optimizations
	.CompilerDebugOptimizations		= ' /MTd /Od /RTC1 /GS /Oy- /GR- /analyze'
	.CompilerReleaseOptimizations	= ' /MT /Ox /Oy /Oi /GS- /GF /GL /Gy /Gw /GR- /analyze'
	.LibrarianDebugOptimizations	= ''
	.LibrarianReleaseOptimizations  = ' /LTCG'
	.LinkerDebugOptimizations		= '' + ' "libcmtd.lib" "libvcruntimed.lib" "libucrtd.lib"'
	.LinkerReleaseOptimizations		= ' /LTCG /OPT:REF,ICF' + ' "libcmt.lib" "libvcruntime.lib" "libucrt.lib"'	

	.BaseIncludePaths		= ' /I"./"'

	.CompilerOptions		+ .BaseIncludePaths
	.PCHOptions				+ .BaseIncludePaths

	.WindowsLibPaths		= '$WindowsUniversalCRTPath$/Lib'

	.UseExceptions			= ' /EHsc'
]
// X86
//------------------------------------------------------------------------------
.X86BaseConfig = 
[
	Using( .MSVCBaseConfig )
	.ToolsBasePath			= '$VSBasePath$\VC\bin'
	.Compiler				= 'Compiler-x86'
	.Librarian				= '$ToolsBasePath$\lib.exe'
	.Linker					= '$ToolsBasePath$\link.exe'
	.CompilerOptions		+ ' /arch:SSE2'
							+ ' /DWIN32'
	.PCHOptions				+ ' /arch:SSE2'
							+ ' /DWIN32'
	.LinkerOptions			+ ' /MACHINE:X86'
	.Platform				= 'x86'
	.LinkerOptions			+ ' /LIBPATH:"$WindowsLibPaths$/10.0.10586.0/um/x86/"' 
							+ ' /LIBPATH:"$WindowsLibPaths$/10.0.10586.0/ucrt/x86/"'
	 						+ ' /LIBPATH:"$VSBasePath$/VC/lib"'
]
.X86DebugConfig =
[
	Using( .X86BaseConfig )
	.Config					= 'Debug'
	.CompilerOptions		+ ' /DDEBUG /DPROFILING_ENABLED'
							+ .CompilerDebugOptimizations
	.PCHOptions				+ ' /DDEBUG /DPROFILING_ENABLED'
							+ .CompilerDebugOptimizations
	.LibrarianOptions		+ .LibrarianDebugOptimizations
	.LinkerOptions			+ .LinkerDebugOptimizations 
							
]

.X86ReleaseConfig =
[
	Using( .X86BaseConfig )
	.Config					= 'Release'
	.CompilerOptions		+ ' /DRELEASE'
							+ ' /d2Zi+'		// Improve optimized debugging VS2013.3+
	.PCHOptions				+ ' /DRELEASE'

    // Setup de-optimization options (FASTBUILD_DEOPTIMIZE_OBJECT)
    .DeoptimizeWritableFilesWithToken   = true
	.CompilerOptionsDeoptimized		= '$CompilerOptions$ /Od'
	.PCHOptionsDeoptimized			= '$PCHOptions$ /Od'

	.CompilerOptions        + .CompilerReleaseOptimizations							
	.PCHOptions             + .CompilerReleaseOptimizations							
	.LibrarianOptions		+ .LibrarianReleaseOptimizations
	.LinkerOptions			+ .LinkerReleaseOptimizations
							
]

.Configs_Windows_MSVC	= { .X86BaseConfig }
;.Configs_Windows_MSVC	= { .X86DebugConfig, .X86ReleaseConfig }
